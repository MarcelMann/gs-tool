##
# Tokens
#
ALGORITHM	:= CLASS
ADD			:= 'add'
AND			:= '&&'
ATTRIBUTE	:= 'attribute'
AUTOLAYOUT	:= 'autolayout'
CLASS		:= WORD ( '.' WORD )*
CREATE		:= 'create'
CURRENT		:= 'current'
DEL			:= 'del'
EDGE		:= 'edge'
ELEMENT		:= NODE | EDGE
FI			:= 'fi'
FOR			:= 'for'
FOREACH		:= 'foreach'
FROM		:= 'from'
GRAPH		:= 'graph'
ID			:= WORD
ID_PATTERN	:= REGEX
IF			:= 'if'
IN			:= 'in'
KEY			:= WORD
KEY_VAL 	:= KEY '=' VAL
OF			:= 'of'
OFF			:= 'off'
ON			:= 'on'
OPEN		:= 'open'
OR			:= '||'
NODE		:= 'node'
RUN			:= 'run'
SET			:= 'set'
THEN		:= 'then'
TO			:= 'to'
USING		:= 'using'
VAL			:= STRING
WITH		:= 'with'
#
##

##
# Axioms relative to a graph.
#
AXG01 	:= CREATE GRAPH [ID] WITH KEY_VAL*
AXG02	:= SET ID CURRENT
AXG03	:= OPEN GRAPH [ID] [USING CLASS]
AXG04	:= SET AUTOLAYOUT ( ON | OFF ) [ON ID]
AXG	:= ( AXG01 | AXG02 | AXG03 )
#
##

##
# Axioms relative to elements of the graph.
#
AXE01	:= ADD ELEMENT [ID] [TO ID] WITH KEY_VAL*
AXE02	:= DEL ELEMENT ID [FROM ID]
AXE	:= ( AXE01 | AXE02 )
#
##

##
# Axioms relative to attributes of elements or graph.
#
AXA01	:= SET ATTRIBUTE KEY_VAL+
AXA02	:= DEL ATTRIBUTE KEY+
AXA03	:= [GRAPH '(' ID ')' '.'] ELEMENT '(' ID ')' '.' KEY
AXA04	:= AXA03 '=' VAL
AXA	:= FOR (ELEMENT ID [OF ID] | GRAPH [ID]) ( AXA01 | AXA02 )
#
##

##
# Axioms relative to algorithms.
#
AXR01	:= RUN ALGORITHM '(' [KEY_VAL (*',' KEY_VAL)*] ')' [ON ID]
AXR 	:= ( AXR01 )
#
##

##
# Axioms relative to loops.
#
AXL01	:= FOREACH ELEMENT [ID_PATTERN] [IN ID] ( AXA01 | AXA02 )
AXL	:= ( AXL01 )
#
##

##
# Axioms relative to conditions.
#
COND		:= AXA03 COMP_OPERATOR STRING
COND_LINKER	:= ( AND | OR )
AXC01		:= IF '[' COND ( COND_LINKER COND )* ']' THEN DO_ABLE [ELSE DO_ABLE] FI
AXC			:= ( AXC01 )
#
##

##
# Global axiom
#
DO_ABLE	:= ( AXG | AXE | AXA | AXR | AXL | AXC )
AXIOM	:= DO_ABLE ';'
#
##
